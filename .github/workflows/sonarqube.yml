name: SonarQube Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonar:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET 6.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      # Install additional workloads (needed for Web Applications)
      - name: Install .NET SDK Workloads
        run: |
          sudo apt-get update
          sudo apt-get install -y dotnet-sdk-6.0
          sudo apt-get install -y aspnetcore-runtime-6.0
          sudo apt-get install -y dotnet-targeting-pack-4.8

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build Solution
        run: dotnet build --no-restore

      - name: Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Begin SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          dotnet-sonarscanner begin /k:"your-project-key" \
            /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.cs.opencover.reportsPaths="coverage.opencover.xml"

      - name: Build Solution for Analysis
        run: dotnet build --no-restore

      - name: Run Unit Tests & Collect Coverage
        run: |
          dotnet test --no-build --collect:"XPlat Code Coverage" \
            --settings coverlet.runsettings

      - name: End SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
